[arch]
image=ghcr.io/ublue-os/arch-toolbox
pull=true
entry=true
replace=true

# Setup Chaotic AUR repo
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || pacman-key --init"
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com"
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || pacman-key --lsign-key 3056513887B78AEB"
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'"
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'"
pre_init_hooks="grep -q '^\[chaotic-aur\]' /etc/pacman.conf || printf '%s\n%s\n' '[chaotic-aur]' 'Include = /etc/pacman.d/chaotic-mirrorlist' >> /etc/pacman.conf"
pre_init_hooks="pacman -Syu --noconfirm"

# packages from arch repos or chaotic aur
additional_packages="base-devel"
additional_packages="bat"
additional_packages="eza"
additional_packages="discimagecreator"
additional_packages="fastfetch"
additional_packages="fish"
additional_packages="git"
additional_packages="headsetcontrol"
additional_packages="micro"
additional_packages="motivate"
additional_packages="speedtest++"

# Now install AUR packages
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview headsetcontrol-notificationd-bash-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview headsetkontrol"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview mpf-check-bin"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview ps3dec-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview ps3-disc-dumper"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview ps3iso-utils-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview ps3netsrv"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview redumper"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview rusty-psn-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview sm64coopdx"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview sm64ex-redrawn-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview smb1r-bin"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview soniccd-git"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview supermarioworld"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview unscrambler"
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview webos-dev-manager-bin"

#Export GUI apps
exported_apps="headsetkontrol"
exported_apps="ps3-disc-dumper"
exported_apps="rusty-psn-gui"
exported_apps="sm64coopdx"
exported_apps="sm64ex"
exported_apps="SMB1R"
exported_apps="soniccd"
exported_apps="Super Mario World"
exported_apps="webos-dev-manager"

#Export CLI apps
exported_bins="/usr/bin/DiscImageCreator"
exported_bins="/usr/bin/extractps3iso"
exported_bins="/usr/bin/headsetcontrol"
exported_bins="/usr/bin/headsetcontrol-notificationd"
exported_bins="/usr/bin/MPF.Check"
exported_bins="/usr/bin/makeps3iso"
exported_bins="/usr/bin/motivate"
exported_bins="/usr/bin/patchps3iso"
exported_bins="/usr/bin/PS3Dec"
exported_bins="/usr/bin/ps3netsrv"
exported_bins="/usr/bin/redumper"
exported_bins="/usr/bin/splitps3iso"
exported_bins="/usr/bin/speedtest++"
exported_bins="/usr/bin/unscrambler.out"

[unified-remote-server]
image=ghcr.io/ublue-os/arch-toolbox
init=true
pull=true
entry=true
replace=true

additional_packages="bat"
additional_packages="eza"
additional_packages="fish"

# Now install AUR packages
init_hooks="runuser -u \${DBX_USERNAME:-$USER} -- paru -S --noconfirm --needed --skipreview unified-remote-server"

#Export GUI apps
exported_apps="urserver"

#Export CLI apps
exported_bins="/opt/urserver/urserver"
exported_bins="/opt/urserver/urserver-start"
exported_bins="/opt/urserver/urserver-stop"

[fedora]
image=ghcr.io/ublue-os/fedora-toolbox:latest
pull=true
entry=true
replace=true

# Setup Terra repo
pre_init_hooks="dnf install -y --nogpgcheck --repofrompath 'terra,https://repos.fyralabs.com/terra42' terra-release"

# Install from enabled repos
additional_packages="bat"
additional_packages="beep"
additional_packages="bsdtar"
additional_packages="dosbox-staging"
additional_packages="dotnet-sdk-8.0"
additional_packages="dotnet-sdk-9.0"
additional_packages="eza"
additional_packages="fastfetch"
additional_packages="festival"
additional_packages="fluid-soundfont-gm"
additional_packages="genisoimage"
additional_packages="inotify-tools"
additional_packages="isomd5sum"
additional_packages="micro"
additional_packages="midi2abc"
additional_packages="mkvtoolnix"
additional_packages="perl-Image-ExifTool"
additional_packages="timidity++"
additional_packages="wodim"

# Install some rpms that are not avalible in the repos
init_hooks="dnf5 install -y /home/zany130/Applications/aaru-5.4.1_linux_amd64.rpm"
init_hooks="dnf5 install -y /home/zany130/Applications/droidcam-client-7.1.0-1.x86_64.rpm"
init_hooks="dnf5 install -y /home/zany130/Applications/insync-3.9.6.60027-fc42.x86_64.rpm"

#Export GUI apps
exported_apps="DroidCam Client"
exported_apps="Insync"

#Export CLI apps
exported_bins="/usr/bin/abc2midi"
exported_bins="/usr/local/bin/aaru"
exported_bins="/usr/bin/beep"
exported_bins="/usr/bin/cdrecord"
exported_bins="/usr/bin/checkisomd5"
exported_bins="/usr/bin/devdump"
exported_bins="/usr/bin/dosbox"
exported_bins="/usr/bin/dvdrecord"
exported_bins="/usr/bin/festival"
exported_bins="/usr/bin/festival_client"
exported_bins="/usr/bin/festival_server"
exported_bins="/usr/bin/festival_server_control"
exported_bins="/usr/bin/genisoimage"
exported_bins="/usr/bin/implantisomd5"
exported_bins="/usr/bin/isovfy"
exported_bins="/usr/bin/midicopy"
exported_bins="/usr/bin/midistats"
exported_bins="/usr/bin/midi2abc"
exported_bins="/usr/bin/mkvextract"
exported_bins="/usr/bin/mkvinfo"
exported_bins="/usr/bin/mkvmerge"
exported_bins="/usr/bin/mkvpropedit"
exported_bins="/usr/bin/netscsid"
exported_bins="/usr/bin/readom"
exported_bins="/usr/bin/wodim"
